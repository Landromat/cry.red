<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RU5ErkJggg==
</value>
  </data>
</root>